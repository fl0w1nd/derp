name: Build and Push DERP Docker Image

on:
  workflow_dispatch:

env:
  # Docker Hub 仓库地址和名称
  REGISTRY: docker.io
  IMAGE_NAME: fl0w1nd/derper

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name:  checkout repository
        uses: actions/checkout@v4

      # 从 Go Proxy API 获取最新版本号
      - name: 🔍 Fetch latest version from Go Proxy
        id: get_version
        run: |
          # 从 API 获取 JSON 数据，并使用 jq 解析出版本号（去掉 'v' 前缀）
          LATEST_VERSION=$(curl -s "https://proxy.golang.org/tailscale.com/@latest" | jq -r .Version | sed 's/^v//')
          
          # 验证是否成功获取版本号
          if [ -z "$LATEST_VERSION" ]; then
            echo "❌ Error: Failed to fetch latest version from Go Proxy."
            exit 1
          fi
          
          echo "✅ Fetched latest version: ${LATEST_VERSION}"
          echo "version=${LATEST_VERSION}" >> $GITHUB_OUTPUT

      - name: ⚙️ Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: ⚙️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🚀 Build and push Docker image
        id: build_and_push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            DERP_VERSION=v${{ steps.get_version.outputs.version }}
          # 使用获取到的版本号和 'latest' 作为镜像标签
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          # 启用 GitHub Actions 缓存
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 📝 Print image digest
        run: |
          echo "🎉 Successfully pushed images with tags:"
          echo "   - ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}"
          echo "   - ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          echo "Image Digest: ${{ steps.build_and_push.outputs.digest }}"
